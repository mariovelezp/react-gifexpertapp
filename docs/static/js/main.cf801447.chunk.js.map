{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","idx","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,qCACI,6BAAKD,IACL,sBAAME,SAXO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAOd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,gB,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCAHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAYrB,ECfwB,SAACA,GAC1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WACLxB,EAAQC,GAGPwB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEb,UAGT,CAACpB,IACGqB,EDL0BM,CAAa3B,GAAhCa,EAAb,EAAON,KAAca,EAArB,EAAqBA,QAErB,OACI,qCACI,6BAAKpB,IAEHoB,GAAW,2CACb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEzBpBiB,EAAe,WACxB,IAMA,EAAoC1C,mBANV,CACE,cAK5B,mBAAOQ,EAAP,KAAmBT,EAAnB,KASA,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWe,KAAI,SAACT,EAAU6B,GAAX,OACZ,cAAC,EAAD,CAEG7B,SAAUA,GADL6B,Y,MCxB7BC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.cf801447.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        //console.log(e.target.value);\n        setInputValue(e.target.value);        \n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();        \n        if (inputValue.trim().length > 2) {\n            setCategories(categories => [inputValue, ...categories ]);\n            setInputValue('');\n        }\n    };\n\n    return (\n        <>\n            <h1>{inputValue}</h1>\n            <form onSubmit={handleSubmit}>\n                <input \n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                />\n            </form>\n        </>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async(category) => {\n    //const url = 'https://api.giphy.com/v1/gifs/search?q=Rick+and+Morty&limit=10&api_key=C0pssNE68MB77U09gNf6Jj3XiyW0UPLq';\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=C0pssNE68MB77U09gNf6Jj3XiyW0UPLq`;\n    \n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map (img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    //setImages(gifs);\n    //console.log(gifs);\n    return gifs;\n};","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n    return (\n        <div className=\"card\">\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n","// import React, {useState, useEffect} from 'react'\nimport React from 'react'\n//import { getGifs } from '../helpers/GetGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport {GifGridItem} from \"./GifGridItem\";\n\nexport const GifGrid = ({category}) => {\n    \n    // const [images, setImages] = useState([]);\n    // useEffect(() => {\n    //     //getGifs();\n    //     getGifs(category)\n    //     //.then(imgs => setImages(imgs))\n    //     .then(setImages)  //Es lo mismo que linea anterior\n    // },[category])\n    \n    //getGifs();\n\n    const {data: images, loading} = useFetchGifs(category);//renombro \"data\" a \"images\"\n\n    return (\n        <>\n            <h3>{category}</h3>\n            {/* {loading ? <p>Loading...</p> : null} */}\n            { loading && <p>Loading...</p> }\n            <div className=\"card-grid\">\n                {               \n                    images.map(img => (\n                        <GifGridItem \n                        key={img.id} \n                        {...img}  //destructurado objeto\n                        />\n                        //<li key={img.id}>{img.title}</li>\n                    ))\n                }                           \n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/GetGifs\";\n\nexport const useFetchGifs = (category) => {\n   const [state, setState] = useState({\n       data: [],\n       loading: true\n   });\n   \n   useEffect(() => {\n        getGifs(category)\n        //.then(imgs => setImages(imgs))\n        //.then(setImages)  //Es lo mismo que linea anterior\n        .then(imgs => {\n            setTimeout(() => {\n                setState({\n                    data:imgs,\n                    loading:false\n                })                \n            }, 3000);\n            \n        })\n    },[category])\n   return state;\n}\n","import React, {useState} from 'react'\nimport {AddCategory} from './components/AddCategory';\nimport {GifGrid} from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    const categoriesInitial = [\n                                'One Punch'/*,\n                                'Samurai X',\n                                'Dragon Ball'*/\n                              ];\n\n    const [categories, setCategories] = useState(categoriesInitial);\n    /*\n    const handleAdd = () => {\n        //setCategories(['categoria', ...categories ]); Add to start\n        //setCategories([...categories, 'categoria']); //Add to end\n        setCategories(e => [...e, 'categoria']);\n    };\n    */\n    \n    return (\n        <>\n          <h2>GifExpertApp</h2>  \n          <AddCategory setCategories={setCategories} />\n          <hr />\n          \n          <ol>\n              {\n                  categories.map((category, idx) => (\n                     <GifGrid \n                        key={idx} \n                        category={category} \n                     />\n                  ))\n              }\n          </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}